'use client';
import { Card } from "@/components/ui/card";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Input } from "@/components/ui/input";
import { Slider } from "@/components/ui/slider";
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion";
import { useState } from "react";
import { Bar } from 'react-chartjs-2';
import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  BarElement,
  Title,
  Tooltip,
  Legend,
} from 'chart.js';

// Exchange rates (EGP per unit, June 2025, approx)
const rates = {
  SAU: { cur: "SAR", rate: 13.33 },
  UAE: { cur: "AED", rate: 13.62 },
  EUR: { cur: "EUR", rate: 56.45 },
  USA: { cur: "USD", rate: 50.0 },
  KWT: { cur: "KWD", rate: 163.0 },
  OMN: { cur: "OMR", rate: 130.0 },
  QAT: { cur: "QAR", rate: 13.74 },
  TUR: { cur: "TRY", rate: 1.56 },
  LBY: { cur: "LYD", rate: 10.3 },
  IRQ: { cur: "IQD", rate: 0.038 },
  EGY: { cur: "EGP", rate: 1.0 },
  JOR: { cur: "JOD", rate: 70.5 },
  LBN: { cur: "LBP", rate: 0.033 },
  MAR: { cur: "MAD", rate: 5.5 },
  TUN: { cur: "TND", rate: 18.0 },
  ALG: { cur: "DZD", rate: 0.37 },
};

type CountryCode = keyof typeof rates;

ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);

// Map country code to flag emoji
const countryFlags: Record<CountryCode, string> = {
  SAU: "๐ธ๐ฆ", UAE: "๐ฆ๐ช", EUR: "๐ช๐บ", USA: "๐บ๐ธ", KWT: "๐ฐ๐ผ", OMN: "๐ด๐ฒ", QAT: "๐ถ๐ฆ", TUR: "๐น๐ท", LBY: "๐ฑ๐พ", IRQ: "๐ฎ๐ถ", EGY: "๐ช๐ฌ", JOR: "๐ฏ๐ด", LBN: "๐ฑ๐ง", MAR: "๐ฒ๐ฆ", TUN: "๐น๐ณ", ALG: "๐ฉ๐ฟ"
};

export default function Home() {
  // State for all form fields
  const [country, setCountry] = useState<CountryCode>("SAU");
  const [priceAbroad, setPriceAbroad] = useState("");
  const [localPrice, setLocalPrice] = useState("");
  const [customsRate, setCustomsRate] = useState(38.5);
  const [dutyFree, setDutyFree] = useState("yes");

  // Compute EGP value for priceAbroad
  const rate = rates[country].rate;
  const currencyLabel = rates[country].cur;
  const abroadRaw = parseFloat(priceAbroad) || 0;
  const priceInEGP = abroadRaw ? abroadRaw * rate : 0;

  // Calculations for results
  const localPriceNum = parseFloat(localPrice) || 0;
  const withCustomsCost = priceInEGP * (1 + customsRate / 100);
  const payDuty = dutyFree === "no";
  const finalCost = payDuty ? withCustomsCost : priceInEGP;
  const diff = localPriceNum ? localPriceNum - finalCost : 0;

  // Chart data
  const chartData = {
    labels: ['ูุตุฑ', 'ุจุฑู ุจุฏูู ุฌูุงุฑู', 'ุจุฑู ุจุนุฏ ุงูุฌูุงุฑู'],
    datasets: [
      {
        label: 'ุงูุชูููุฉ ุจุงูุฌููู',
        data: [localPriceNum, priceInEGP, withCustomsCost],
        backgroundColor: [
          '#4ade80', // ูุตุฑ
          '#60a5fa', // ุจุฑู ุจุฏูู ุฌูุงุฑู
          '#fbbf24', // ุจุฑู ุจุนุฏ ุงูุฌูุงุฑู
        ],
        borderRadius: 6,
      },
    ],
  };
  const chartOptions = {
    responsive: true,
    plugins: {
      legend: { display: false },
      title: { display: false },
    },
    scales: {
      y: { beginAtZero: true },
    },
  };

  // Decision message logic
  let decisionMsg = "";
  if (localPriceNum && abroadRaw) {
    if (diff > 0) {
      decisionMsg = `ุฃููุฑ ูู ุชุณุชูุฑุฏ: ูุชููุฑ ุญูุงูู ${diff.toLocaleString()} ุฌู.`;
    } else if (diff < 0) {
      decisionMsg = `ุงูุฃููุฑ ุชุดุชุฑู ูู ูุตุฑ: ูุชููุฑ ุญูุงูู ${Math.abs(diff).toLocaleString()} ุฌู.`;
    } else {
      decisionMsg = "ุงูุณุนุฑูู ูุชูุงุฑุจูู ุฌุฏูุง.";
    }
  }

  return (
    <div className="min-h-screen flex items-center justify-center bg-[#f7f7f7] p-8">
      <Card className="max-w-lg w-full p-6 sm:p-8 rounded-lg shadow-md">
        <h1 className="text-xl sm:text-2xl font-bold mb-6 text-right">ุญุณุงุจ ุชูููุฉ ุงูููุจุงูู</h1>

        <div className="flex flex-row-reverse gap-4 items-center mb-6 flex-wrap">
          <div className="flex-1 flex flex-col items-end min-w-[180px]">
            <Label htmlFor="country" className="block font-semibold mb-1 text-base sm:text-lg">ุงุฎุชุงุฑ ุงูุฏููุฉ</Label>
            <Select value={country} onValueChange={v => setCountry(v as CountryCode)} name="country">
              <SelectTrigger id="country" className="mb-0" />
              <SelectContent>
                <SelectItem value="SAU">๐ธ๐ฆ ุงูุณุนูุฏูุฉ</SelectItem>
                <SelectItem value="UAE">๐ฆ๐ช ุงูุฅูุงุฑุงุช</SelectItem>
                <SelectItem value="EUR">๐ช๐บ ุฃูุฑูุจุง (ููุฑู)</SelectItem>
                <SelectItem value="USA">๐บ๐ธ ุฃูุฑููุง</SelectItem>
                <SelectItem value="KWT">๐ฐ๐ผ ุงููููุช</SelectItem>
                <SelectItem value="OMN">๐ด๐ฒ ุนููุงู</SelectItem>
                <SelectItem value="QAT">๐ถ๐ฆ ูุทุฑ</SelectItem>
                <SelectItem value="TUR">๐น๐ท ุชุฑููุง</SelectItem>
                <SelectItem value="LBY">๐ฑ๐พ ููุจูุง</SelectItem>
                <SelectItem value="IRQ">๐ถ ุงูุนุฑุงู</SelectItem>
                <SelectItem value="EGY">๐ช๐ฌ ูุตุฑ</SelectItem>
                <SelectItem value="JOR">๐ฏ๐ด ุงูุฃุฑุฏู</SelectItem>
                <SelectItem value="LBN">๐ฑ๐ง ูุจูุงู</SelectItem>
                <SelectItem value="MAR">๐ฒ๐ฆ ุงููุบุฑุจ</SelectItem>
                <SelectItem value="TUN">๐น๐ณ ุชููุณ</SelectItem>
                <SelectItem value="ALG">๐ฉ๐ฟ ุงูุฌุฒุงุฆุฑ</SelectItem>
              </SelectContent>
            </Select>
          </div>
          <div className="flex-1 flex flex-col items-end min-w-[180px]">
            <Label htmlFor="priceAbroad" className="block font-semibold mb-1 text-base sm:text-lg">ุณุนุฑ ูู ุจูุฏ ุงูุดุฑุงุก (ุจุงูุนููุฉ ุงููุญููุฉ)</Label>
            <Input id="priceAbroad" type="number" min={0} step={0.01} placeholder="ูุซูุงู 1000" className="mb-1 text-right" value={priceAbroad} onChange={e => setPriceAbroad(e.target.value)} />
            <small id="priceInEGP" className="block text-gray-500 text-right text-sm">
              {abroadRaw ? `ุงูุณุนุฑ ุจุงูุฌููู: ${priceInEGP.toLocaleString()} ุฌู` : "ุงูุณุนุฑ ุจุงูุฌููู: โ"}
            </small>
          </div>
        </div>

        <Label htmlFor="localPrice" className="block font-semibold mt-4 mb-1 text-base sm:text-lg text-right">ุงูุณุนุฑ ูู ูุตุฑ (ุจุงูุฌููู ุงููุตุฑู)</Label>
        <Input id="localPrice" type="number" min={0} step={0.01} placeholder="ูุซูุงู 59999" className="mb-6 text-right" value={localPrice} onChange={e => setLocalPrice(e.target.value)} />

        <div className="flex flex-row-reverse gap-4 mb-4 flex-wrap">
          <div className="flex-1 min-w-[180px]">
            <Label htmlFor="customsRate" className="block font-semibold mb-1 text-base sm:text-lg text-right">ูุณุจุฉ ุงูุฌูุงุฑู: {customsRate}%</Label>
            <Slider id="customsRate" min={0} max={38.5} step={0.5} value={[customsRate]} onValueChange={([v]) => setCustomsRate(v)} />
          </div>
          <div className="flex-1 min-w-[180px]">
            <Label htmlFor="dutyFree" className="block font-semibold mb-1 text-base sm:text-lg text-right">ูุนุงู ูุงู ููุจุงููุ</Label>
            <Select value={dutyFree} onValueChange={setDutyFree} name="dutyFree">
              <SelectTrigger id="dutyFree" />
              <SelectContent>
                <SelectItem value="yes">ุฃููุฉุ ูุงุญุฏ ุจุณ</SelectItem>
                <SelectItem value="no">ุฃูุชุฑ ูู ูุงุญุฏ</SelectItem>
              </SelectContent>
            </Select>
          </div>
        </div>

        <div className="bg-[#e9f8e1] rounded-md p-4 sm:p-6 mt-8 text-right">
          <p className="mb-1 flex flex-row-reverse items-center gap-2 justify-end">
            ุงูุณุนุฑ ุจุงููุตุฑู: <strong>{priceInEGP ? priceInEGP.toLocaleString() + " ุฌู" : "โ"}</strong>
            <span className="text-xl">{countryFlags[country]}</span>
          </p>
          <p className="mb-1">{payDuty ? `ุจุนุฏ ุงูุฌูุงุฑู (${customsRate}ูช): ` : "ูู ุบูุฑ ุฌูุงุฑู: "}<strong>{payDuty ? withCustomsCost.toLocaleString() + " ุฌู" : priceInEGP ? priceInEGP.toLocaleString() + " ุฌู" : "โ"}</strong></p>
          <p className="mb-1 flex flex-row-reverse items-center gap-2 justify-end">
            ุณุนุฑู ูู ูุตุฑ: <strong>{localPriceNum ? localPriceNum.toLocaleString() + " ุฌู" : "โ"}</strong>
            <span className="text-xl">๐ช๐ฌ</span>
          </p>
          <p className="mb-2">ูุฑู ุงูุณุนุฑ: <strong>{localPriceNum && abroadRaw ? diff.toLocaleString() + " ุฌู" : "โ"}</strong></p>
          <div className="mt-4">
            <Bar data={chartData} options={chartOptions} height={180} />
          </div>
          <div id="decisionMsg" className="font-bold mt-4 text-lg">{decisionMsg}</div>
        </div>

        <footer className="mt-6 text-xs text-gray-600 leading-relaxed">
          ูุนุฏูู ุงูุฌูุงุฑู ูุงูุถุฑุงูุจ ุนูู ุงูููุจุงููุงุช ุญูุงูู 38.5ูช (โููุญุฏููุซ 1-ููููู-2025).<br />
          ูุณุงูุฑ ููุนุงู ููุจุงูู ูุงุญุฏ ุดุฎุตู ุบุงูุจุงู ููุนุฏููุ ุฃูุชุฑ ูู ูุงุญุฏ ุจููุญุงุณูุจ.<br />
          ูู ุญุจูุช ุชุบููุฑ ุฃุณุนุงุฑ ุงูุตุฑู ุญุฏูุซูุง ูู ุงูููุฏ.
          <Accordion type="single" collapsible className="mt-2">
            <AccordionItem value="source">
              <AccordionTrigger>ูุงุฐุง ูููู ุงููุตุฏุฑุ</AccordionTrigger>
              <AccordionContent>
                <ul className="list-disc pr-4">
                  <li>ุจูุงู ุงูููุฆุฉ ุงูุนุงูุฉ ููุงุณุชุนูุงูุงุช ุนู ุจุฏุก ุชุทุจูู 38.5 ูช ุนูู ุงูููุจุงููุงุช ุงููุณุชูุฑุฏุฉ ุจุฏุงูุฉ 1 ููุงูุฑ 2025 - <a href="https://sis.gov.eg/Story/203961/Egyptians-to-start-paying-taxes-on-imported-mobiles-1-January-2025%2C-not-retroactively?lang=en-us&utm_source=chatgpt.com" className="underline">SIS</a></li>
                  <li>ุชุตุฑูุญ ูุชุญุฏุซ ุงููุงููุฉ ูุฌุฑูุฏุฉ ยซุงูุฃูุฑุงู ุงูุฅูุฌููุฒูุฉยป ูุดุฑุญ ุชูุงุตูู ูุณุจุฉ 38.5 ูช - <a href="https://english.ahram.org.eg/News/537862.aspx?utm_source=chatgpt.com" className="underline">Ahram Online</a></li>
                  <li>ููุงูุฉ ุดููุฎูุง ุชููู ุนู ุฑุฆูุณ ุงููุฒุฑุงุก ุงุนุชูุงุฏ ุงููุณุจุฉ ููุณูุง ููุญุฏ ูู ุงูุชูุฑูุจ - <a href="https://english.news.cn/africa/20250102/7a8bf50dbe964613abd87994331abeeb/c.html?utm_source=chatgpt.com" className="underline">Xinhua News</a></li>
                  <li>ยซEgypt Independentยป ููุถุญ ุฅู ูุณุงูุฑ ูุนุงู ููุจุงูู ูุงุญุฏ ููุนููุ ูุงูุฒูุงุฏุฉ ุชูุญุงุณูุจ - <a href="https://www.egyptindependent.com/how-many-personal-phones-are-allowed-to-enter-egypt-from-the-airport/?utm_source=chatgpt.com" className="underline">Egypt Independent</a></li>
                  <li>ยซScoop Empireยป ูุคูุฏ ุงูุฅุนูุงุก ููุงุชู ูุงุญุฏ ูุฏูุน 38.5 ูช ููุจุงูู - <a href="https://scoopempire.com/egypts-3-new-customs-measures-to-tackle-mobile-phone-smuggling/?utm_source=chatgpt.com" className="underline">Scoop Empire</a></li>
                </ul>
              </AccordionContent>
            </AccordionItem>
          </Accordion>
        </footer>
      </Card>
    </div>
  );
}
